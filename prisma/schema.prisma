generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id          String     @id @default(uuid())
  description String
  status      TaskStatus @default(TO_DO)
  dueDate     DateTime?
  activityId  String?
  playerId    String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  activity    Activity?  @relation(fields: [activityId], references: [id])
  player      Player?    @relation(fields: [playerId], references: [id])
}

model Player {
  id         String     @id @default(uuid())
  username   String     @unique
  name       String
  surname    String
  email      String     @unique
  phone      String?
  department String?
  img        String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  cityId     String?
  countryId  String
  sex        Sex
  role       PlayerRole
  city       City?      @relation(fields: [cityId], references: [id])
  country    Country    @relation(fields: [countryId], references: [id])
  tasks      Task[]
  activities Activity[] @relation("ActivityPlayers")
  leads      Lead[]     @relation("LeadPlayers")
}

model City {
  id              String           @id @default(uuid())
  name            String           @unique
  countryId       String
  accountManagers AccountManager[]
  country         Country          @relation(fields: [countryId], references: [id])
  companies       Company[]
  contacts        Contact[]
  leads           Lead[]           @relation("LeadCity")
  players         Player[]
}

model Country {
  id             String           @id @default(uuid())
  name           String           @unique
  AccountManager AccountManager[]
  cities         City[]
  companies      Company[]
  contact        Contact[]
  leads          Lead[]           @relation("LeadCountry")
  players        Player[]
}

model Company {
  id        String         @id @default(uuid())
  name      String         @unique
  sector    CompanySector? @default(OTHER_MATERIALS_AND_PRODUCTION)
  size      Int
  website   String?
  revenue   Float?
  countryId String
  cityId    String
  status    CompanyStatus  @default(ACTIVE)
  city      City           @relation(fields: [cityId], references: [id])
  country   Country        @relation(fields: [countryId], references: [id])
  contacts  Contact[]
  leads     Lead[]
  @@index([sector])
  sourceId  String?
  source    Source?   @relation(fields: [sourceId], references: [id])
}

model Lead {
  id               String          @id @default(uuid())
  name             String
  contactId        String?
  companyId        String?
  activityId       String?
  status           LeadStatus      @default(NEW)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  currency         Currency        @default(EUR)
  value            Float?          @default(0)
  countryId        String?
  cityId           String?
  accountManagerId String?
  areaId           String?
  accountManager   AccountManager? @relation(fields: [accountManagerId], references: [id])
  activity         Activity?       @relation(fields: [activityId], references: [id])
  area             Area?           @relation("LeadArea", fields: [areaId], references: [id])
  city             City?           @relation("LeadCity", fields: [cityId], references: [id])
  company          Company?        @relation(fields: [companyId], references: [id])
  contact          Contact?        @relation("LeadToContact", fields: [contactId], references: [id])
  country          Country?        @relation("LeadCountry", fields: [countryId], references: [id])
  players          Player[]        @relation("LeadPlayers")
}

model Contact {
  id         String      @id @default(uuid())
  firstName  String
  lastName   String
  email      String      @unique
  phone1     String?
  phone2     String?
  countryId  String
  cityId     String
  jobTitle   JobTitle
  companyId  String?
  type       ContactType
  city       City        @relation(fields: [cityId], references: [id])
  company    Company?    @relation(fields: [companyId], references: [id])
  country    Country     @relation(fields: [countryId], references: [id])
  leads      Lead[]      @relation("LeadToContact")
  sourceId           String?
  source             Source?             @relation(fields: [sourceId], references: [id])
  activityContacts   ActivityContact[]   // asistencia
  activityStatuses   ActivityContactStatus[] // seguimiento
}

model Activity {
  id                        String                  @id @default(uuid())
  name                      String?
  type                      ActivityType
  date                      DateTime
  endtime                   DateTime?               @db.Timestamp(6)
  attendees                 Int?
  targetContacts            Int?
  costId                    String?
  areaId                    String?

  area                      Area?                   @relation("ActivityArea", fields: [areaId], references: [id])
  cost                      Cost?                   @relation("ActivityCost", fields: [costId], references: [id])
  leads                     Lead[]
  tasks                     Task[]

  activityContacts          ActivityContact[]       // asistencia
  activityContactStatuses   ActivityContactStatus[] // seguimiento

  players                   Player[]                @relation("ActivityPlayers")
}


model AccountManager {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  countryId String?
  cityId    String?
  areaId    String
  area      Area     @relation(fields: [areaId], references: [id])
  city      City?    @relation(fields: [cityId], references: [id])
  country   Country? @relation(fields: [countryId], references: [id])
  leads     Lead[]

  @@unique([firstName, lastName, areaId])
}

model Manager {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  areaId    String
  area      Area     @relation(fields: [areaId], references: [id])
  @@unique([firstName, lastName, areaId])
}

model Cost {
  id         String     @id @default(uuid())
  amount     Float
  currency   Currency
  name       String
  activities Activity[] @relation("ActivityCost")
}

model Area {
  id             String           @id @default(uuid()) // Cambiado a Uuid
  name           AreaEnum       @unique
  AccountManager AccountManager[]
  Manager        Manager[] 
  leads          Lead[]         @relation("LeadArea")
  activities     Activity[]     @relation("ActivityArea")  
}


enum JobTitle {
  CEO
  CIO
  CFO
  CTO
  CISO
  COO
  ARCHITECT
  STO
  IT_MANAGEMENT
  INFORMATION_SECURITY
  INFRAESTRUCTURE
  OTHER
}

enum ExecutionStatus {
  TO_BE_QUALIFIED
  INTERESTED
  INTERESTED_IN_OTHER_SOLUTIONS
  NOT_INTERESTED
  RESEND_INFORMATION
  NO_CURRENT_NEED_CONTACT_IN_THE_FUTURE
  MEETING_CLOSED
  INFORMATION_REQUEST
}

enum ActivityType {
  WEBINAR
  TRADESHOW
  PHYSICAL_EVENT
  LINKEDIN_CAMPAIGN
  GOOGLE_CAMPAIGN
  PAID_MEDIA_BRANDED_CONTENT
  WEBSITE_FORM
  WEBSITE_REFERRAL
  WEBINAR_WITH_VENDOR
  TRADESHOW_WITH_VENDOR
  PHYSICAL_EVENT_WITH_VENDOR
  VENDOR_REFERRAL
  BDR
  DIGITAL_SALES
}

enum PlayerRole {
  DIRECTOR_COMERCIAL
  DIRECTOR_MARKETING
  ANALISTA_COMERCIAL
  ANALISTA_MARKETING
  DIGITAL_SALES
}

enum TaskStatus {
  TO_DO
  PENDING
  IN_PROGRESS
  COMPLETED
  BLOCKED
}

enum Sex {
  MALE
  FEMALE
}

enum LeadStatus {
  NEW
  OPEN
  CONTACTED
  QUALIFIED
  CLOSED
  LOST
}

enum Currency {
  EUR
  USD
  MXN
}

enum CompanyStatus {
  ACTIVE
  RISKY
  INACTIVE
}

enum ContactType {
  PROSPECT
  CLIENT
  PARTNER
}

enum CompanyTemperature {
  COLD
  WARM
}

enum CompanySector {
  AGRICULTURE_AND_FARMING
  CONSTRUCTION_AND_INFRASTRUCTURE
  CONSUMER_AND_RETAIL
  DEFENSE_AND_SECURITY
  DESIGN_AND_CREATIVE
  EDUCATION
  ENERGY_AND_ENVIRONMENT
  EVENTS_AND_HOSPITALITY
  FINANCE_AND_INSURANCE
  HEALTH_AND_WELLNESS
  INDUSTRY_AND_MANUFACTURING
  INFORMATION_TECHNOLOGY_AND_SERVICES
  LOGISTICS_AND_TRANSPORTATION
  MEDIA_AND_ENTERTAINMENT
  NON_PROFITS_AND_PHILANTHROPY
  OTHER_MATERIALS_AND_PRODUCTION
  PHARMACEUTICALS
  PROFESSIONAL_SERVICES_AND_CONSULTING
  PUBLIC_SECTOR_AND_GOVERNMENT
  REAL_ESTATE
  TECHNOLOGY_AND_TELECOMMUNICATIONS
}

enum AreaEnum {
  CYBERSECURITY
  ADVISORY
  SECURE_FILE_TRANSFER_B2B
  SECURE_CLOUD
  SECURE_DATA
  COMERCIAL
}

model ActivityContactStatus {
  id                    String   @id @default(uuid())
  activityId            String
  contactId             String
  status                ExecutionStatus
  followUp              Boolean?
  followUpNote          String?
  askforinformation     Boolean?
  askForInformationNote String?

  activity              Activity @relation(fields: [activityId], references: [id])
  contact               Contact  @relation(fields: [contactId], references: [id])

  @@unique([activityId, contactId])
}


model ActivityContact {
  activityId String
  contactId  String
  attended   Boolean? // true si asisti√≥, false si no, null si no se sabe

  activity   Activity @relation(fields: [activityId], references: [id])
  contact    Contact  @relation(fields: [contactId], references: [id])

  @@id([activityId, contactId])
}


model Source {
  id        String     @id @default(uuid())
  name      String     @unique // Ej: "Lusha", "LinkedIn", "CRM", "Otro"
  contacts  Contact[]
  companies Company[]
}